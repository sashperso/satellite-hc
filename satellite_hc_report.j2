Satellite Health Check Report

#TODO - check if facts work for Satellite#
This is a health check report for the {{ ansible_hostname }} Satellite server conducted on a {{ ansible_distribution }} {{ansible_distribution_version }} instance, at {{ ansible_date_time.time }} on {{ ansible_date_time.date }}.

Analysis

Test: {{ test_result.stdout | to_nice_yaml }} 

=High-Level Check:
{{ result_health_check.stdout_lines | to_nice_yaml }}

Satellite service status:
{{ result_running_services.stdout_lines | to_nice_yaml }}


=Satellite Configuration

==Satellite System Details
Investigation: What version of RHEL is the Satellite server running on? What is the architecture? Is the CPU suitable to the Satellite server? is the hostname unique?
Observation:
- Hostname: {{ result_hostname.stdout | to_nice_yaml }}
- IP Address: {{ result_ip_addr.stdout | to_nice_yaml }}
- Kernel Version: {{ result_kernel_version.stdout | to_nice_yaml }}
- Uptime: {{ result_uptime.stdout | to_nice_yaml }}
- Last Reboot Time: {{ result_reboot.stdout | to_nice_yaml }}
- Red Hat Release: {{ result_redhat_release.stdout | to_nice_yaml }}

The CPU usage information is as follows:
{{ result_system_cpu.stdout_lines | to_nice_yaml}}

Is there at least 20gb of disk space available in /var?
{{ result_disk_space }}
Guidance: #TODO#
Rationale: There should be at least 20 gig of space available in /var directory to perform future synchronizations. Please note that if you are to download a major release (e.g. RHEL 6 Server), you will require a minimum of 20Gig per release.


==Satellite and Capsule Architecture
Investigation: List the names and urls of the Satellite and Capsule servers. List the organisations linked to the Satellite and Capsule servers.
Observation: 
{{ result_capsule_list.stdout_lines | to_nice_yaml }}
{{ result_organization_list.stdout_lines | to_nice_yaml }}
NOTE - for more information on a given organisation, run `hammer organization info --id <id_number>`
Guidance: #TODO#
Rationale: #TODO#

==Satellite Version 
Investigation: What is the currently installed Satellite version on the Satellite server and the capsules? What was the initial installation version?
Observation: 
{{ result_satellite_version.stdout_lines | to_nice_yaml }} is installed on the Satellite server.
{% if result_capsule_version.failed == false %}
{{ result_capsule_version.stdout_lines | to_nice_yaml }} is installed on the Capsule server.
{% else %}
Package satellite-capsule is not installed.
{% endif %}
Guidance: #TODO#
Rationale: #TODO#

==Firewalls and Proxy
Investigation: Is firewalling appropriately configured for the Satellite and Capsule servers? Is the proxy server able to access cdn.redhat.com and subscription.rhsm.redhat.com directly without SSL termination? Are the required ports open? Are any optional ports opened?
Observation: {{ result_firewall_ports.stdout | to_nice_yaml }}
Guidance: #TODO#
Rationale: 
Generally, the following 12 ports should be open on the firewall:
  - 80/tcp
  - 443/tcp
  - 5647/tcp
  - 8000/tcp
  - 8140/tcp 
  - 8443/tcp
  - 9090/tcp
  - 53/tcp
  - 53/udp
  - 67/udp
  - 69/udp
  - 5000/tcp

=Infrastructure

==Infrastructure Architecture
Investigation: List the organisations and locations associated with the Satellite server.
Observation:
{{ result_hammer_org.stdout | to_nice_yaml }}
{{ result_hammer_location.stdout | to_nice_yaml }}
Guidance: #TODO#
Rationale: #TODO#

==Network Requirements
Investigation: The network connectivey between Satellite and its capsules needs to be reliable. Can the Satellite connect to the CDN without issue? Do the FQDN, Domain, and Shortname connections resolve? Does the Satellite have full forward and reverse dns resolution?
Observation:
{{ result_ping.stdout | to_nice_yaml }}
{{ result_reverse_resolution.stdout | to_nice_yaml }}
{{ result_cdn_conn.stdout | to_nice_yaml }}
{{ result_port_listen.stdout | to_nice_yaml }}
Guidance: #TODO#
Rationale: #TODO#

==Custom Hierarchies
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

=Storage

==Qpidd Storage
Investigation: How much soace is available in the qpidd partition? is the qpidd parititon too large?
Observation:
{{ result_qpidd_status.stdout | to_nice_yaml }}
{{ result_qpidd_storage.stdout | to_nice_yaml }}
Guidance: #TODO#
Rationale: #TODO#

==Backup/Restore Procedures
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

=Host Management

==Remote Execution
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

==Download Policy
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

==Tainted Kernels
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

==Provisioning
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

==Errata
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

==Managed Host Logging
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

=Satellite Management

==Repositories
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

==Satellite Logging
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

==Lifecycle Environments
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

==Patch Cycles
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

==Sync Plans
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

==Activation Keys
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#

==Host Groups
Investigation: #TODO#
Observation: #TODO#
Guidance: #TODO#
Rationale: #TODO#
